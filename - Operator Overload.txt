CustomList<t> operator () Method


public static CustomList<T> operator -(CustomList<T> list, CustomList<T> list2)


Parameters (the 2 lists to be combined into one list)

CustomList<T> list, CustomList<T> list2




Returns

CustomList<T> newList
Returns the custom list created when subtracting the two lists brought into the method.



Implements

Remove(T item)


Example

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

 public class CustomList<T> : IEnumerable
    {
        //member variables
        private T[] items;

        public T this[int i]
        {
            get
            {
                if (i < count && i >= 0)
                {
                    return items[i];
                }
                else
                {
                    throw new ArgumentOutOfRangeException();
                }
            }
            set
            {
                items[i] = value;
            }
        }
        //count property
        private int count;
        public int Count
        {
            get
            {
                return count;
            }
        }

        //capacity property
        private int capacity;
        public int Capacity
        {
            get
            {
                return capacity;
            }

            set
            {
                if (value > 0)
                {
                    T[] newItems = new T[value];
                    if (count > 0)
                    {
                        CopyArray(items, newItems);                       
                        capacity *= 2;
                    }
                    items = newItems;
                }
            }


        }       

        //constructor
        public CustomList()
        {
            count = 0;
            capacity = 4;
            items = new T[capacity];

        }

        public IEnumerator GetEnumerator()
        {
            for (int i = 0; i < count; i++)
            {
                yield return items[i];
            }
        }

//overrides the - operator to subtract on instance of a class from another
        public static CustomList<T> operator -(CustomList<T> list, CustomList<T> list2)
        {
            //Creates a new CustomList of type <T>
            CustomList<T> newList = new CustomList<T>();

 	    //Adds each item from list to newList.
            foreach (T item in list) newList.Add(item);
            
            //Loops through the items from list2 and removes any instances of item from newList.
            foreach (T item in list2)
            {
                newList.Remove(item);
            }

            return newList;
        }


//Example

 class Program
    {
        static void Main(string[] args)
        {
	    //Creates a new custom list and adds three integers.
            CustomList<int> list2 = new CustomList<int>();
            list2.Add(1);
            list2.Add(6);
            list2.Add(4);

	    //Creates a new Custom list of integers and adds 7 integers to it.
            CustomList<int> newList = new CustomList<int>();
            newList.Add(1);
            newList.Add(2);
            newList.Add(3);
            newList.Add(4);
            newList.Add(5);
            newList.Add(12);
            newList.Add(6);          
	    
            //Calls the - operator overload method to substracts list 2 from list one. This is all items in list2 and any instances of the items in newList.
            CustomList<int> list3 = newList - list2;

            //Prints out the items in list3
            Console.WriteLine(list3);

            Console.ReadLine();
    
    }

//Output

23512